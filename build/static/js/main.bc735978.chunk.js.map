{"version":3,"sources":["components/Postagem/Postagem.js","components/Postagens/Postagens.js","components/DetalhesPostagem/DetalhesPostagem.js","App.js","store/store.js","index.js"],"names":["Usuario","props","Card","className","List","ListItem","to","post","id","title","Postagens","useState","posts","setPosts","useEffect","fetch","then","resposta","json","dados","map","userId","body","Postagem","key","DetalhesPostagem","useParams","setPost","undefined","App","exact","path","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"mUAgBeA,MAVf,SAAiBC,GACf,OACE,kBAACC,EAAA,EAAD,CAAMC,UAAU,WACd,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KAAU,kBAAC,IAAD,CAAMC,GAAE,qBAAgBL,EAAMM,KAAKC,KAAOP,EAAMM,KAAKE,WCsBxDC,MA5Bf,WAEE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAfAC,qBAAU,WACRC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,IAAMP,EAAQO,EAAMC,KAAI,SAAAb,GAAI,MAAK,CAC/BC,GAAID,EAAKC,GACTC,MAAOF,EAAKE,MACZY,OAAQd,EAAKc,OACbC,KAAMf,EAAKe,SAGbT,EAASD,QAEV,IAGD,oCACGA,EAAMQ,KAAI,SAAAb,GAAI,OACb,kBAACgB,EAAD,CAAUC,IAAKjB,EAAKC,GAAID,KAAMA,SCYvBkB,MAnCf,WAEE,IAAQjB,EAAOkB,cAAPlB,GAER,EAAwBG,mBAAS,IAAjC,mBAAOJ,EAAP,KAAaoB,EAAb,KAiBA,OAfAb,qBAAU,WACRC,MAAM,8CAAD,OAA+CP,IACjDQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACAA,GACFQ,EAAQ,CACNnB,GAAIW,EAAMX,GACVC,MAAOU,EAAMV,MACbY,OAAQF,EAAME,OACdC,KAAMH,EAAMG,YAInB,CAACd,SAEYoB,IAAZrB,EAAKC,GACA,oCACL,4BAAKD,EAAKE,OACV,2BAAIF,EAAKe,MACT,kBAAC,IAAD,CAAMhB,GAAG,cAAT,WAIG,oCACL,6DACA,kBAAC,IAAD,CAAMA,GAAG,cAAT,YCUWuB,MArCf,WACE,OACE,kBAAC,IAAD,KACE,yBAAK1B,UAAU,OACb,gCACE,6BACE,4BACE,4BACE,kBAAC,IAAD,CAASG,GAAG,IAAIwB,OAAK,GAArB,gBAMR,8BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAID,OAAK,GACnB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOC,KAAK,kBACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,cACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,mCACA,iE,gBCjCRC,EAAQC,YACVC,OAAOC,8BAAgCD,OAAOC,gCCKlDC,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,EAAD,OAEFM,SAASC,eAAe,W","file":"static/js/main.bc735978.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Card, List, ListItem } from \"@material-ui/core\";\n\nimport './Usuario.css'\n\nfunction Usuario(props) {\n  return (\n    <Card className=\"Usuario\">\n      <List>\n        <ListItem><Link to={`/postagens/${props.post.id}`}>{props.post.title}</Link></ListItem>\n      </List>\n    </Card>\n  )\n}\n\nexport default Usuario","import React, { useState, useEffect } from 'react'\n\nimport Postagem from '../Postagem/Postagem'\n\nfunction Postagens() {\n\n  const [posts, setPosts] = useState([])\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/posts')\n    .then(resposta => resposta.json())\n    .then(dados => {\n      const posts = dados.map(post => ({\n        id: post.id,\n        title: post.title,\n        userId: post.userId,\n        body: post.body\n      }))\n\n      setPosts(posts)\n    })\n  }, [])\n\n  return (\n    <>\n      {posts.map(post => (\n        <Postagem key={post.id} post={post} />\n      ))}\n    </>\n  )\n}\n\nexport default Postagens","import React, { useState, useEffect } from 'react'\nimport { Link, useParams } from 'react-router-dom'\n\nfunction DetalhesPostagem() {\n\n  const { id } = useParams()\n\n  const [post, setPost] = useState({})\n\n  useEffect(() => {\n    fetch(`https://jsonplaceholder.typicode.com/posts/${id}`)\n      .then(resposta => resposta.json())\n      .then(dados => {\n        if (dados) {\n          setPost({\n            id: dados.id,\n            title: dados.title,\n            userId: dados.userId,\n            body: dados.body\n          })\n        }\n      })\n  }, [id])\n\n  if (post.id !== undefined) {\n    return <>\n      <h1>{post.title}</h1>\n      <p>{post.body}</p>\n      <Link to=\"/postagens\">Voltar</Link>\n    </>\n  }\n\n  return <>\n    <h1>Usuário não encontrado!</h1>\n    <Link to=\"/postagens\">Voltar</Link>\n  </>\n}\n\nexport default DetalhesPostagem","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, NavLink, Switch, Route } from 'react-router-dom';\n\nimport Postagens from './components/Postagens/Postagens'\nimport DetalhesPostagem from './components/DetalhesPostagem/DetalhesPostagem'\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <header>\n          <nav>\n            <ul>\n              <li>\n                <NavLink to=\"/\" exact>Noticias</NavLink>\n              </li>\n            </ul>\n          </nav>\n        </header>\n\n        <main>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Postagens />\n            </Route>\n            <Route path=\"/postagens/:id\">\n              <DetalhesPostagem />\n            </Route>\n            <Route path=\"/postagens\">\n              <Postagens />\n            </Route>\n            <Route path=\"*\">\n              <h1>404</h1>\n              <p>Página não encontrada!</p>\n            </Route>\n          </Switch>\n        </main>\n      </div>\n    </Router>\n\n  );\n}\n\nexport default App;\n","import { createStore } from \"redux\";\nconst store = createStore(\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nexport { store }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}